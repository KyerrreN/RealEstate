name: CI Pipeline

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    build-and-test:
        runs-on: windows-latest

        steps:
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: 17
                  distribution: "zulu"

            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Cache SonarCloud packages
              uses: actions/cache@v4
              with:
                  path: ~\sonar\cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar

            - name: Cache SonarCloud scanner
              id: cache-sonar-scanner
              uses: actions/cache@v4
              with:
                  path: .\.sonar\scanner
                  key: ${{ runner.os }}-sonar-scanner
                  restore-keys: ${{ runner.os }}-sonar-scanner

            - name: Install SonarCloud scanner
              if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
              shell: powershell
              run: |
                  New-Item -Path .\.sonar\scanner -ItemType Directory
                  dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

            - name: Begin SonarCloud analysis
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              shell: powershell
              run: |
                  .\.sonar\scanner\dotnet-sonarscanner begin /k:"KyerrreN_RealEstate" /o:"kyerrren" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.xml"

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "9.0.x"

            # - name: Generate NuGet config for GitHub Packages
            #   shell: powershell
            #   run: |
            #       @"
            #       <configuration>
            #        <packageSources>
            #         <add key="github" value="https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" />
            #         <add key="nuget.org" value="https://api.nuget.org/v3/index.json" />
            #         </packageSources>
            #         <packageSourceCredentials>
            #           <github>
            #             <add key="Username" value="${{ github.actor }}" />
            #             <add key="ClearTextPassword" value="${{ secrets.PACKAGE_TOKEN }}" />
            #           </github>
            #         </packageSourceCredentials>
            #       </configuration>
            #       "@ | Out-File -FilePath nuget.config -Encoding utf8

            - name: Restore Dependencies
              run: dotnet restore RealEstate # --configfile nuget.config

            - name: Build solution
              run: dotnet build RealEstate --no-restore

            - name: Run unit tests on Business Logic Layer
              run: >
                  dotnet test RealEstate/RealEstate.BLLTests
                  --no-build
                  --verbosity normal
                  /p:CollectCoverage=true
                  /p:CoverletOutputFormat=opencover
                  /p:CoverletOutput=TestResults/coverage-unit.xml
                  /p:Include="[RealEstate.BLL*]RealEstate.BLL.Services.*"
                  /p:Include="[RealEstate.BLL*]RealEstate.BLL.Interfaces.*"

            - name: Run Integration Tests
              env:
                  INTEGRATION_TESTS: "true"
              run: >
                  dotnet test RealEstate/RealEstate.API.IntegrationTests
                  --no-build
                  --verbosity normal
                  /p:CollectCoverage=true
                  /p:CoverletOutputFormat=opencover
                  /p:CoverletOutput=TestResults/coverage-integration.xml
                  /p:Include="[RealEstate.Presentation*]RealEstate.Presentation.Controllers.*"

            - name: End SonarCloud analysis
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              shell: powershell
              run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
